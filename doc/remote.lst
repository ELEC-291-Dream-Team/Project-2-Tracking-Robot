0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Thu Mar 23 13:41:10 2023
0000              5   ;--------------------------------------------------------
                  5   $name remote
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _getsn
0000             28            public _LCDprint
0000             29            public _LCD_4BIT
0000             30            public _WriteCommand
0000             31            public _WriteData
0000             32            public _LCD_byte
0000             33            public _LCD_pulse
0000             34            public _Timer2_ISR
0000             35            public _Timer0_ISR
0000             36            public _TIMER2_Init
0000             37            public _TIMER0_Init
0000             38            public _waitms
0000             39            public _Timer3us
0000             40            public __c51_external_startup
0000             41            public _LCDprint_PARM_3
0000             42            public _getsn_PARM_2
0000             43            public _LCDprint_PARM_2
0000             44            public _pwm_count
0000             45            public _pulse_width
0000             46            public _overflow_count
0000             47   ;--------------------------------------------------------
0000             48   ; Special Function Registers
0000             49   ;--------------------------------------------------------
0000             50   _ACC            DATA 0xe0
0000             51   _ADC0ASAH       DATA 0xb6
0000             52   _ADC0ASAL       DATA 0xb5
0000             53   _ADC0ASCF       DATA 0xa1
0000             54   _ADC0ASCT       DATA 0xc7
0000             55   _ADC0CF0        DATA 0xbc
0000             56   _ADC0CF1        DATA 0xb9
0000             57   _ADC0CF2        DATA 0xdf
0000             58   _ADC0CN0        DATA 0xe8
0000             59   _ADC0CN1        DATA 0xb2
0000             60   _ADC0CN2        DATA 0xb3
0000             61   _ADC0GTH        DATA 0xc4
0000             62   _ADC0GTL        DATA 0xc3
0000             63   _ADC0H          DATA 0xbe
0000             64   _ADC0L          DATA 0xbd
0000             65   _ADC0LTH        DATA 0xc6
0000             66   _ADC0LTL        DATA 0xc5
0000             67   _ADC0MX         DATA 0xbb
0000             68   _B              DATA 0xf0
0000             69   _CKCON0         DATA 0x8e
0000             70   _CKCON1         DATA 0xa6
0000             71   _CLEN0          DATA 0xc6
0000             72   _CLIE0          DATA 0xc7
0000             73   _CLIF0          DATA 0xe8
0000             74   _CLKSEL         DATA 0xa9
0000             75   _CLOUT0         DATA 0xd1
0000             76   _CLU0CF         DATA 0xb1
0000             77   _CLU0FN         DATA 0xaf
0000             78   _CLU0MX         DATA 0x84
0000             79   _CLU1CF         DATA 0xb3
0000             80   _CLU1FN         DATA 0xb2
0000             81   _CLU1MX         DATA 0x85
0000             82   _CLU2CF         DATA 0xb6
0000             83   _CLU2FN         DATA 0xb5
0000             84   _CLU2MX         DATA 0x91
0000             85   _CLU3CF         DATA 0xbf
0000             86   _CLU3FN         DATA 0xbe
0000             87   _CLU3MX         DATA 0xae
0000             88   _CMP0CN0        DATA 0x9b
0000             89   _CMP0CN1        DATA 0x99
0000             90   _CMP0MD         DATA 0x9d
0000             91   _CMP0MX         DATA 0x9f
0000             92   _CMP1CN0        DATA 0xbf
0000             93   _CMP1CN1        DATA 0xac
0000             94   _CMP1MD         DATA 0xab
0000             95   _CMP1MX         DATA 0xaa
0000             96   _CRC0CN0        DATA 0xce
0000             97   _CRC0CN1        DATA 0x86
0000             98   _CRC0CNT        DATA 0xd3
0000             99   _CRC0DAT        DATA 0xcb
0000            100   _CRC0FLIP       DATA 0xcf
0000            101   _CRC0IN         DATA 0xca
0000            102   _CRC0ST         DATA 0xd2
0000            103   _DAC0CF0        DATA 0x91
0000            104   _DAC0CF1        DATA 0x92
0000            105   _DAC0H          DATA 0x85
0000            106   _DAC0L          DATA 0x84
0000            107   _DAC1CF0        DATA 0x93
0000            108   _DAC1CF1        DATA 0x94
0000            109   _DAC1H          DATA 0x8a
0000            110   _DAC1L          DATA 0x89
0000            111   _DAC2CF0        DATA 0x95
0000            112   _DAC2CF1        DATA 0x96
0000            113   _DAC2H          DATA 0x8c
0000            114   _DAC2L          DATA 0x8b
0000            115   _DAC3CF0        DATA 0x9a
0000            116   _DAC3CF1        DATA 0x9c
0000            117   _DAC3H          DATA 0x8e
0000            118   _DAC3L          DATA 0x8d
0000            119   _DACGCF0        DATA 0x88
0000            120   _DACGCF1        DATA 0x98
0000            121   _DACGCF2        DATA 0xa2
0000            122   _DERIVID        DATA 0xad
0000            123   _DEVICEID       DATA 0xb5
0000            124   _DPH            DATA 0x83
0000            125   _DPL            DATA 0x82
0000            126   _EIE1           DATA 0xe6
0000            127   _EIE2           DATA 0xf3
0000            128   _EIP1           DATA 0xbb
0000            129   _EIP1H          DATA 0xee
0000            130   _EIP2           DATA 0xed
0000            131   _EIP2H          DATA 0xf6
0000            132   _EMI0CN         DATA 0xe7
0000            133   _FLKEY          DATA 0xb7
0000            134   _HFO0CAL        DATA 0xc7
0000            135   _HFO1CAL        DATA 0xd6
0000            136   _HFOCN          DATA 0xef
0000            137   _I2C0ADM        DATA 0xff
0000            138   _I2C0CN0        DATA 0xba
0000            139   _I2C0DIN        DATA 0xbc
0000            140   _I2C0DOUT       DATA 0xbb
0000            141   _I2C0FCN0       DATA 0xad
0000            142   _I2C0FCN1       DATA 0xab
0000            143   _I2C0FCT        DATA 0xf5
0000            144   _I2C0SLAD       DATA 0xbd
0000            145   _I2C0STAT       DATA 0xb9
0000            146   _IE             DATA 0xa8
0000            147   _IP             DATA 0xb8
0000            148   _IPH            DATA 0xf2
0000            149   _IT01CF         DATA 0xe4
0000            150   _LFO0CN         DATA 0xb1
0000            151   _P0             DATA 0x80
0000            152   _P0MASK         DATA 0xfe
0000            153   _P0MAT          DATA 0xfd
0000            154   _P0MDIN         DATA 0xf1
0000            155   _P0MDOUT        DATA 0xa4
0000            156   _P0SKIP         DATA 0xd4
0000            157   _P1             DATA 0x90
0000            158   _P1MASK         DATA 0xee
0000            159   _P1MAT          DATA 0xed
0000            160   _P1MDIN         DATA 0xf2
0000            161   _P1MDOUT        DATA 0xa5
0000            162   _P1SKIP         DATA 0xd5
0000            163   _P2             DATA 0xa0
0000            164   _P2MASK         DATA 0xfc
0000            165   _P2MAT          DATA 0xfb
0000            166   _P2MDIN         DATA 0xf3
0000            167   _P2MDOUT        DATA 0xa6
0000            168   _P2SKIP         DATA 0xcc
0000            169   _P3             DATA 0xb0
0000            170   _P3MDIN         DATA 0xf4
0000            171   _P3MDOUT        DATA 0x9c
0000            172   _PCA0CENT       DATA 0x9e
0000            173   _PCA0CLR        DATA 0x9c
0000            174   _PCA0CN0        DATA 0xd8
0000            175   _PCA0CPH0       DATA 0xfc
0000            176   _PCA0CPH1       DATA 0xea
0000            177   _PCA0CPH2       DATA 0xec
0000            178   _PCA0CPH3       DATA 0xf5
0000            179   _PCA0CPH4       DATA 0x85
0000            180   _PCA0CPH5       DATA 0xde
0000            181   _PCA0CPL0       DATA 0xfb
0000            182   _PCA0CPL1       DATA 0xe9
0000            183   _PCA0CPL2       DATA 0xeb
0000            184   _PCA0CPL3       DATA 0xf4
0000            185   _PCA0CPL4       DATA 0x84
0000            186   _PCA0CPL5       DATA 0xdd
0000            187   _PCA0CPM0       DATA 0xda
0000            188   _PCA0CPM1       DATA 0xdb
0000            189   _PCA0CPM2       DATA 0xdc
0000            190   _PCA0CPM3       DATA 0xae
0000            191   _PCA0CPM4       DATA 0xaf
0000            192   _PCA0CPM5       DATA 0xcc
0000            193   _PCA0H          DATA 0xfa
0000            194   _PCA0L          DATA 0xf9
0000            195   _PCA0MD         DATA 0xd9
0000            196   _PCA0POL        DATA 0x96
0000            197   _PCA0PWM        DATA 0xf7
0000            198   _PCON0          DATA 0x87
0000            199   _PCON1          DATA 0xcd
0000            200   _PFE0CN         DATA 0xc1
0000            201   _PRTDRV         DATA 0xf6
0000            202   _PSCTL          DATA 0x8f
0000            203   _PSTAT0         DATA 0xaa
0000            204   _PSW            DATA 0xd0
0000            205   _REF0CN         DATA 0xd1
0000            206   _REG0CN         DATA 0xc9
0000            207   _REVID          DATA 0xb6
0000            208   _RSTSRC         DATA 0xef
0000            209   _SBCON1         DATA 0x94
0000            210   _SBRLH1         DATA 0x96
0000            211   _SBRLL1         DATA 0x95
0000            212   _SBUF           DATA 0x99
0000            213   _SBUF0          DATA 0x99
0000            214   _SBUF1          DATA 0x92
0000            215   _SCON           DATA 0x98
0000            216   _SCON0          DATA 0x98
0000            217   _SCON1          DATA 0xc8
0000            218   _SFRPAGE        DATA 0xa7
0000            219   _SFRPGCN        DATA 0xbc
0000            220   _SFRSTACK       DATA 0xd7
0000            221   _SMB0ADM        DATA 0xd6
0000            222   _SMB0ADR        DATA 0xd7
0000            223   _SMB0CF         DATA 0xc1
0000            224   _SMB0CN0        DATA 0xc0
0000            225   _SMB0DAT        DATA 0xc2
0000            226   _SMB0FCN0       DATA 0xc3
0000            227   _SMB0FCN1       DATA 0xc4
0000            228   _SMB0FCT        DATA 0xef
0000            229   _SMB0RXLN       DATA 0xc5
0000            230   _SMB0TC         DATA 0xac
0000            231   _SMOD1          DATA 0x93
0000            232   _SP             DATA 0x81
0000            233   _SPI0CFG        DATA 0xa1
0000            234   _SPI0CKR        DATA 0xa2
0000            235   _SPI0CN0        DATA 0xf8
0000            236   _SPI0DAT        DATA 0xa3
0000            237   _SPI0FCN0       DATA 0x9a
0000            238   _SPI0FCN1       DATA 0x9b
0000            239   _SPI0FCT        DATA 0xf7
0000            240   _SPI0PCF        DATA 0xdf
0000            241   _TCON           DATA 0x88
0000            242   _TH0            DATA 0x8c
0000            243   _TH1            DATA 0x8d
0000            244   _TL0            DATA 0x8a
0000            245   _TL1            DATA 0x8b
0000            246   _TMOD           DATA 0x89
0000            247   _TMR2CN0        DATA 0xc8
0000            248   _TMR2CN1        DATA 0xfd
0000            249   _TMR2H          DATA 0xcf
0000            250   _TMR2L          DATA 0xce
0000            251   _TMR2RLH        DATA 0xcb
0000            252   _TMR2RLL        DATA 0xca
0000            253   _TMR3CN0        DATA 0x91
0000            254   _TMR3CN1        DATA 0xfe
0000            255   _TMR3H          DATA 0x95
0000            256   _TMR3L          DATA 0x94
0000            257   _TMR3RLH        DATA 0x93
0000            258   _TMR3RLL        DATA 0x92
0000            259   _TMR4CN0        DATA 0x98
0000            260   _TMR4CN1        DATA 0xff
0000            261   _TMR4H          DATA 0xa5
0000            262   _TMR4L          DATA 0xa4
0000            263   _TMR4RLH        DATA 0xa3
0000            264   _TMR4RLL        DATA 0xa2
0000            265   _TMR5CN0        DATA 0xc0
0000            266   _TMR5CN1        DATA 0xf1
0000            267   _TMR5H          DATA 0xd5
0000            268   _TMR5L          DATA 0xd4
0000            269   _TMR5RLH        DATA 0xd3
0000            270   _TMR5RLL        DATA 0xd2
0000            271   _UART0PCF       DATA 0xd9
0000            272   _UART1FCN0      DATA 0x9d
0000            273   _UART1FCN1      DATA 0xd8
0000            274   _UART1FCT       DATA 0xfa
0000            275   _UART1LIN       DATA 0x9e
0000            276   _UART1PCF       DATA 0xda
0000            277   _VDM0CN         DATA 0xff
0000            278   _WDTCN          DATA 0x97
0000            279   _XBR0           DATA 0xe1
0000            280   _XBR1           DATA 0xe2
0000            281   _XBR2           DATA 0xe3
0000            282   _XOSC0CN        DATA 0x86
0000            283   _DPTR           DATA 0x8382
0000            284   _TMR2RL         DATA 0xcbca
0000            285   _TMR3RL         DATA 0x9392
0000            286   _TMR4RL         DATA 0xa3a2
0000            287   _TMR5RL         DATA 0xd3d2
0000            288   _TMR0           DATA 0x8c8a
0000            289   _TMR1           DATA 0x8d8b
0000            290   _TMR2           DATA 0xcfce
0000            291   _TMR3           DATA 0x9594
0000            292   _TMR4           DATA 0xa5a4
0000            293   _TMR5           DATA 0xd5d4
0000            294   _SBRL1          DATA 0x9695
0000            295   _PCA0           DATA 0xfaf9
0000            296   _PCA0CP0        DATA 0xfcfb
0000            297   _PCA0CP1        DATA 0xeae9
0000            298   _PCA0CP2        DATA 0xeceb
0000            299   _PCA0CP3        DATA 0xf5f4
0000            300   _PCA0CP4        DATA 0x8584
0000            301   _PCA0CP5        DATA 0xdedd
0000            302   _ADC0ASA        DATA 0xb6b5
0000            303   _ADC0GT         DATA 0xc4c3
0000            304   _ADC0           DATA 0xbebd
0000            305   _ADC0LT         DATA 0xc6c5
0000            306   _DAC0           DATA 0x8584
0000            307   _DAC1           DATA 0x8a89
0000            308   _DAC2           DATA 0x8c8b
0000            309   _DAC3           DATA 0x8e8d
0000            310   ;--------------------------------------------------------
0000            311   ; special function bits
0000            312   ;--------------------------------------------------------
0000            313   _ACC_0          BIT 0xe0
0000            314   _ACC_1          BIT 0xe1
0000            315   _ACC_2          BIT 0xe2
0000            316   _ACC_3          BIT 0xe3
0000            317   _ACC_4          BIT 0xe4
0000            318   _ACC_5          BIT 0xe5
0000            319   _ACC_6          BIT 0xe6
0000            320   _ACC_7          BIT 0xe7
0000            321   _TEMPE          BIT 0xe8
0000            322   _ADGN0          BIT 0xe9
0000            323   _ADGN1          BIT 0xea
0000            324   _ADWINT         BIT 0xeb
0000            325   _ADBUSY         BIT 0xec
0000            326   _ADINT          BIT 0xed
0000            327   _IPOEN          BIT 0xee
0000            328   _ADEN           BIT 0xef
0000            329   _B_0            BIT 0xf0
0000            330   _B_1            BIT 0xf1
0000            331   _B_2            BIT 0xf2
0000            332   _B_3            BIT 0xf3
0000            333   _B_4            BIT 0xf4
0000            334   _B_5            BIT 0xf5
0000            335   _B_6            BIT 0xf6
0000            336   _B_7            BIT 0xf7
0000            337   _C0FIF          BIT 0xe8
0000            338   _C0RIF          BIT 0xe9
0000            339   _C1FIF          BIT 0xea
0000            340   _C1RIF          BIT 0xeb
0000            341   _C2FIF          BIT 0xec
0000            342   _C2RIF          BIT 0xed
0000            343   _C3FIF          BIT 0xee
0000            344   _C3RIF          BIT 0xef
0000            345   _D1SRC0         BIT 0x88
0000            346   _D1SRC1         BIT 0x89
0000            347   _D1AMEN         BIT 0x8a
0000            348   _D01REFSL       BIT 0x8b
0000            349   _D3SRC0         BIT 0x8c
0000            350   _D3SRC1         BIT 0x8d
0000            351   _D3AMEN         BIT 0x8e
0000            352   _D23REFSL       BIT 0x8f
0000            353   _D0UDIS         BIT 0x98
0000            354   _D1UDIS         BIT 0x99
0000            355   _D2UDIS         BIT 0x9a
0000            356   _D3UDIS         BIT 0x9b
0000            357   _EX0            BIT 0xa8
0000            358   _ET0            BIT 0xa9
0000            359   _EX1            BIT 0xaa
0000            360   _ET1            BIT 0xab
0000            361   _ES0            BIT 0xac
0000            362   _ET2            BIT 0xad
0000            363   _ESPI0          BIT 0xae
0000            364   _EA             BIT 0xaf
0000            365   _PX0            BIT 0xb8
0000            366   _PT0            BIT 0xb9
0000            367   _PX1            BIT 0xba
0000            368   _PT1            BIT 0xbb
0000            369   _PS0            BIT 0xbc
0000            370   _PT2            BIT 0xbd
0000            371   _PSPI0          BIT 0xbe
0000            372   _P0_0           BIT 0x80
0000            373   _P0_1           BIT 0x81
0000            374   _P0_2           BIT 0x82
0000            375   _P0_3           BIT 0x83
0000            376   _P0_4           BIT 0x84
0000            377   _P0_5           BIT 0x85
0000            378   _P0_6           BIT 0x86
0000            379   _P0_7           BIT 0x87
0000            380   _P1_0           BIT 0x90
0000            381   _P1_1           BIT 0x91
0000            382   _P1_2           BIT 0x92
0000            383   _P1_3           BIT 0x93
0000            384   _P1_4           BIT 0x94
0000            385   _P1_5           BIT 0x95
0000            386   _P1_6           BIT 0x96
0000            387   _P1_7           BIT 0x97
0000            388   _P2_0           BIT 0xa0
0000            389   _P2_1           BIT 0xa1
0000            390   _P2_2           BIT 0xa2
0000            391   _P2_3           BIT 0xa3
0000            392   _P2_4           BIT 0xa4
0000            393   _P2_5           BIT 0xa5
0000            394   _P2_6           BIT 0xa6
0000            395   _P3_0           BIT 0xb0
0000            396   _P3_1           BIT 0xb1
0000            397   _P3_2           BIT 0xb2
0000            398   _P3_3           BIT 0xb3
0000            399   _P3_4           BIT 0xb4
0000            400   _P3_7           BIT 0xb7
0000            401   _CCF0           BIT 0xd8
0000            402   _CCF1           BIT 0xd9
0000            403   _CCF2           BIT 0xda
0000            404   _CCF3           BIT 0xdb
0000            405   _CCF4           BIT 0xdc
0000            406   _CCF5           BIT 0xdd
0000            407   _CR             BIT 0xde
0000            408   _CF             BIT 0xdf
0000            409   _PARITY         BIT 0xd0
0000            410   _F1             BIT 0xd1
0000            411   _OV             BIT 0xd2
0000            412   _RS0            BIT 0xd3
0000            413   _RS1            BIT 0xd4
0000            414   _F0             BIT 0xd5
0000            415   _AC             BIT 0xd6
0000            416   _CY             BIT 0xd7
0000            417   _RI             BIT 0x98
0000            418   _TI             BIT 0x99
0000            419   _RB8            BIT 0x9a
0000            420   _TB8            BIT 0x9b
0000            421   _REN            BIT 0x9c
0000            422   _CE             BIT 0x9d
0000            423   _SMODE          BIT 0x9e
0000            424   _RI1            BIT 0xc8
0000            425   _TI1            BIT 0xc9
0000            426   _RBX1           BIT 0xca
0000            427   _TBX1           BIT 0xcb
0000            428   _REN1           BIT 0xcc
0000            429   _PERR1          BIT 0xcd
0000            430   _OVR1           BIT 0xce
0000            431   _SI             BIT 0xc0
0000            432   _ACK            BIT 0xc1
0000            433   _ARBLOST        BIT 0xc2
0000            434   _ACKRQ          BIT 0xc3
0000            435   _STO            BIT 0xc4
0000            436   _STA            BIT 0xc5
0000            437   _TXMODE         BIT 0xc6
0000            438   _MASTER         BIT 0xc7
0000            439   _SPIEN          BIT 0xf8
0000            440   _TXNF           BIT 0xf9
0000            441   _NSSMD0         BIT 0xfa
0000            442   _NSSMD1         BIT 0xfb
0000            443   _RXOVRN         BIT 0xfc
0000            444   _MODF           BIT 0xfd
0000            445   _WCOL           BIT 0xfe
0000            446   _SPIF           BIT 0xff
0000            447   _IT0            BIT 0x88
0000            448   _IE0            BIT 0x89
0000            449   _IT1            BIT 0x8a
0000            450   _IE1            BIT 0x8b
0000            451   _TR0            BIT 0x8c
0000            452   _TF0            BIT 0x8d
0000            453   _TR1            BIT 0x8e
0000            454   _TF1            BIT 0x8f
0000            455   _T2XCLK0        BIT 0xc8
0000            456   _T2XCLK1        BIT 0xc9
0000            457   _TR2            BIT 0xca
0000            458   _T2SPLIT        BIT 0xcb
0000            459   _TF2CEN         BIT 0xcc
0000            460   _TF2LEN         BIT 0xcd
0000            461   _TF2L           BIT 0xce
0000            462   _TF2H           BIT 0xcf
0000            463   _T4XCLK0        BIT 0x98
0000            464   _T4XCLK1        BIT 0x99
0000            465   _TR4            BIT 0x9a
0000            466   _T4SPLIT        BIT 0x9b
0000            467   _TF4CEN         BIT 0x9c
0000            468   _TF4LEN         BIT 0x9d
0000            469   _TF4L           BIT 0x9e
0000            470   _TF4H           BIT 0x9f
0000            471   _T5XCLK0        BIT 0xc0
0000            472   _T5XCLK1        BIT 0xc1
0000            473   _TR5            BIT 0xc2
0000            474   _T5SPLIT        BIT 0xc3
0000            475   _TF5CEN         BIT 0xc4
0000            476   _TF5LEN         BIT 0xc5
0000            477   _TF5L           BIT 0xc6
0000            478   _TF5H           BIT 0xc7
0000            479   _RIE            BIT 0xd8
0000            480   _RXTO0          BIT 0xd9
0000            481   _RXTO1          BIT 0xda
0000            482   _RFRQ           BIT 0xdb
0000            483   _TIE            BIT 0xdc
0000            484   _TXHOLD         BIT 0xdd
0000            485   _TXNF1          BIT 0xde
0000            486   _TFRQ           BIT 0xdf
0000            487   ;--------------------------------------------------------
0000            488   ; overlayable register banks
0000            489   ;--------------------------------------------------------
0000            490            rbank0 segment data overlay
0000            491   ;--------------------------------------------------------
0000            492   ; internal ram data
0000            493   ;--------------------------------------------------------
0000            494            rseg R_DSEG
0000            495   _overflow_count:
0000            496            ds 1
0001            497   _pulse_width:
0001            498            ds 2
0003            499   _pwm_count:
0003            500            ds 2
0005            501   _LCDprint_PARM_2:
0005            502            ds 1
0006            503   _getsn_PARM_2:
0006            504            ds 2
0008            505   _getsn_buff_1_72:
0008            506            ds 3
000B            507   _getsn_sloc0_1_0:
000B            508            ds 2
000D            509   ;--------------------------------------------------------
000D            510   ; overlayable items in internal ram 
000D            511   ;--------------------------------------------------------
0000            512            rseg    R_OSEG
0000            513   ;--------------------------------------------------------
0000            514   ; indirectly addressable internal ram data
0000            515   ;--------------------------------------------------------
0000            516            rseg R_ISEG
0000            517   ;--------------------------------------------------------
0000            518   ; absolute internal ram data
0000            519   ;--------------------------------------------------------
0000            520            DSEG
0000            521   ;--------------------------------------------------------
0000            522   ; bit data
0000            523   ;--------------------------------------------------------
0000            524            rseg R_BSEG
0000            525   _LCDprint_PARM_3:
0000            526            DBIT    1
0001            527   ;--------------------------------------------------------
0001            528   ; paged external ram data
0001            529   ;--------------------------------------------------------
0000            530            rseg R_PSEG
0000            531   ;--------------------------------------------------------
0000            532   ; external ram data
0000            533   ;--------------------------------------------------------
0000            534            rseg R_XSEG
0000            535   ;--------------------------------------------------------
0000            536   ; absolute external ram data
0000            537   ;--------------------------------------------------------
0000            538            XSEG
0000            539   ;--------------------------------------------------------
0000            540   ; external initialized ram data
0000            541   ;--------------------------------------------------------
0000            542            rseg R_IXSEG
0000            543            rseg R_HOME
0000            544            rseg R_GSINIT
0000            545            rseg R_CSEG
0000            546   ;--------------------------------------------------------
0000            547   ; Reset entry point and interrupt vectors
0000            548   ;--------------------------------------------------------
0000            549            CSEG at 0x0000
0000 020000     550            ljmp    _crt0
000B            551            CSEG at 0x000b
000B 020000     552            ljmp    _Timer0_ISR
002B            553            CSEG at 0x002b
002B 020000     554            ljmp    _Timer2_ISR
002E            555   ;--------------------------------------------------------
002E            556   ; global & static initialisations
002E            557   ;--------------------------------------------------------
0000            558            rseg R_HOME
0000            559            rseg R_GSINIT
0000            560            rseg R_GSINIT
0000            561   ;--------------------------------------------------------
0000            562   ; data variables initialization
0000            563   ;--------------------------------------------------------
0000            564            rseg R_DINIT
0000            565   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:35: int pwm_count = 0;
0000 E4         566            clr     a
0001 F500       567            mov     _pwm_count,a
0003 F501       568            mov     (_pwm_count + 1),a
0005            569            ; The linker places a 'ret' at the end of segment R_DINIT.
0005            570   ;--------------------------------------------------------
0005            571   ; code
0005            572   ;--------------------------------------------------------
0000            573            rseg R_CSEG
0000            574   ;------------------------------------------------------------
0000            575   ;Allocation info for local variables in function '_c51_external_startup'
0000            576   ;------------------------------------------------------------
0000            577   ;------------------------------------------------------------
0000            578   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:37: char _c51_external_startup(void)
0000            579   ;        -----------------------------------------
0000            580   ;         function _c51_external_startup
0000            581   ;        -----------------------------------------
0000            582   __c51_external_startup:
0000            583            using   0
0000            584   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:40: SFRPAGE = 0x00;
0000 75A700     585            mov     _SFRPAGE,#0x00
0003            586   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:41: WDTCN = 0xDE; // First key
0003 7597DE     587            mov     _WDTCN,#0xDE
0006            588   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:42: WDTCN = 0xAD; // Second key
0006 7597AD     589            mov     _WDTCN,#0xAD
0009            590   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:44: VDM0CN |= 0x80;
0009 43FF80     591            orl     _VDM0CN,#0x80
000C            592   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:45: RSTSRC = 0x02;
000C 75EF02     593            mov     _RSTSRC,#0x02
000F            594   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:52: SFRPAGE = 0x10;
000F 75A710     595            mov     _SFRPAGE,#0x10
0012            596   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:53: PFE0CN = 0x20; // SYSCLK < 75 MHz.
0012 75C120     597            mov     _PFE0CN,#0x20
0015            598   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:54: SFRPAGE = 0x00;
0015 75A700     599            mov     _SFRPAGE,#0x00
0018            600   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:79: CLKSEL = 0x00;
0018 75A900     601            mov     _CLKSEL,#0x00
001B            602   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:80: CLKSEL = 0x00;
001B 75A900     603            mov     _CLKSEL,#0x00
001E            604   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:81: while ((CLKSEL & 0x80) == 0)
001E            605   L002001?:
001E E5A9       606            mov     a,_CLKSEL
0020 30E738     607            jnb     acc.7,L002001?
0023            608   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:83: CLKSEL = 0x03;
0023 75A903     609            mov     _CLKSEL,#0x03
0026            610   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:84: CLKSEL = 0x03;
0026 75A903     611            mov     _CLKSEL,#0x03
0029            612   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:85: while ((CLKSEL & 0x80) == 0)
0029            613   L002004?:
0029 E5A9       614            mov     a,_CLKSEL
002B 30E7B8     615            jnb     acc.7,L002004?
002E            616   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:91: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     617            orl     _P0MDOUT,#0x10
0031            618   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:92: XBR0 = 0x01;         // Enable UART0 on P0.4(TX) and P0.5(RX)
0031 75E101     619            mov     _XBR0,#0x01
0034            620   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:93: XBR1 = 0X00;
0034 75E200     621            mov     _XBR1,#0x00
0037            622   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:94: XBR2 = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     623            mov     _XBR2,#0x40
003A            624   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:100: SCON0 = 0x10;
003A 759810     625            mov     _SCON0,#0x10
003D            626   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:101: CKCON0 |= 0b_0000_0000; // Timer 1 uses the system clock divided by 12.
003D 858E8E     627            mov     _CKCON0,_CKCON0
0040            628   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:102: TH1 = 0x100 - ((SYSCLK / BAUDRATE) / (2L * 12L));
0040 758DE6     629            mov     _TH1,#0xE6
0043            630   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:103: TL1 = TH1;            // Init Timer1
0043 858D8B     631            mov     _TL1,_TH1
0046            632   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:104: TMOD &= ~0xf0; // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     633            anl     _TMOD,#0x0F
0049            634   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:105: TMOD |= 0x20;
0049 438920     635            orl     _TMOD,#0x20
004C            636   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:106: TR1 = 1; // START Timer1
004C D28E       637            setb    _TR1
004E            638   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:107: TI = 1;     // Indicate TX0 ready
004E D299       639            setb    _TI
0050            640   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:109: return 0;
0050 758200     641            mov     dpl,#0x00
0053 22         642            ret
0054            643   ;------------------------------------------------------------
0054            644   ;Allocation info for local variables in function 'Timer3us'
0054            645   ;------------------------------------------------------------
0054            646   ;us                        Allocated to registers r2 
0054            647   ;i                         Allocated to registers r3 
0054            648   ;------------------------------------------------------------
0054            649   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:113: void Timer3us(unsigned char us)
0054            650   ;        -----------------------------------------
0054            651   ;         function Timer3us
0054            652   ;        -----------------------------------------
0054            653   _Timer3us:
0054 AA82       654            mov     r2,dpl
0056            655   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:118: CKCON0 |= 0b_0100_0000;
0056 438E40     656            orl     _CKCON0,#0x40
0059            657   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:120: TMR3RL = (-(SYSCLK) / 1000000L); // Set Timer3 to overflow in 1us.
0059 7592B8     658            mov     _TMR3RL,#0xB8
005C 7593FF     659            mov     (_TMR3RL >> 8),#0xFF
005F            660   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:121: TMR3 = TMR3RL;                                      // Initialize Timer3 for first overflow
005F 859294     661            mov     _TMR3,_TMR3RL
0062 859395     662            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            663   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:123: TMR3CN0 = 0x04;                     // Sart Timer3 and clear overflow flag
0065 759104     664            mov     _TMR3CN0,#0x04
0068            665   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:124: for (i = 0; i < us; i++) // Count <us> overflows
0068 7B00       666            mov     r3,#0x00
006A            667   L003004?:
006A C3         668            clr     c
006B EB         669            mov     a,r3
006C 9A         670            subb    a,r2
006D 5000       671            jnc     L003007?
006F            672   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:126: while (!(TMR3CN0 & 0x80))
006F            673   L003001?:
006F E591       674            mov     a,_TMR3CN0
0071 30E7B8     675            jnb     acc.7,L003001?
0074            676   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:128: TMR3CN0 &= ~(0x80); // Clear overflow indicator
0074 53917F     677            anl     _TMR3CN0,#0x7F
0077            678   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:124: for (i = 0; i < us; i++) // Count <us> overflows
0077 0B         679            inc     r3
0078 8000       680            sjmp    L003004?
007A            681   L003007?:
007A            682   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:130: TMR3CN0 = 0; // Stop Timer3 and clear overflow flag
007A 759100     683            mov     _TMR3CN0,#0x00
007D 22         684            ret
007E            685   ;------------------------------------------------------------
007E            686   ;Allocation info for local variables in function 'waitms'
007E            687   ;------------------------------------------------------------
007E            688   ;ms                        Allocated to registers r2 r3 
007E            689   ;j                         Allocated to registers r2 r3 
007E            690   ;------------------------------------------------------------
007E            691   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:133: void waitms(unsigned int ms)
007E            692   ;        -----------------------------------------
007E            693   ;         function waitms
007E            694   ;        -----------------------------------------
007E            695   _waitms:
007E AA82       696            mov     r2,dpl
0080 AB83       697            mov     r3,dph
0082            698   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:136: for (j = ms; j != 0; j--)
0082            699   L004001?:
0082 BA0078     700            cjne    r2,#0x00,L004010?
0085 BB0078     701            cjne    r3,#0x00,L004010?
0088 22         702            ret
0089            703   L004010?:
0089            704   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:138: Timer3us(249);
0089 7582F9     705            mov     dpl,#0xF9
008C C002       706            push    ar2
008E C003       707            push    ar3
0090 120000     708            lcall   _Timer3us
0093            709   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:139: Timer3us(249);
0093 7582F9     710            mov     dpl,#0xF9
0096 120000     711            lcall   _Timer3us
0099            712   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:140: Timer3us(249);
0099 7582F9     713            mov     dpl,#0xF9
009C 120000     714            lcall   _Timer3us
009F            715   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:141: Timer3us(250);
009F 7582FA     716            mov     dpl,#0xFA
00A2 120000     717            lcall   _Timer3us
00A5 D003       718            pop     ar3
00A7 D002       719            pop     ar2
00A9            720   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:136: for (j = ms; j != 0; j--)
00A9 1A         721            dec     r2
00AA BAFFB8     722            cjne    r2,#0xff,L004011?
00AD 1B         723            dec     r3
00AE            724   L004011?:
00AE 8000       725            sjmp    L004001?
00B0            726   ;------------------------------------------------------------
00B0            727   ;Allocation info for local variables in function 'TIMER0_Init'
00B0            728   ;------------------------------------------------------------
00B0            729   ;------------------------------------------------------------
00B0            730   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:145: void TIMER0_Init(void)
00B0            731   ;        -----------------------------------------
00B0            732   ;         function TIMER0_Init
00B0            733   ;        -----------------------------------------
00B0            734   _TIMER0_Init:
00B0            735   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:147: CKCON0 |= 0b_0000_0010; // Set Timer0 Clock (T0X2) to 48 clk periods
00B0 438E02     736            orl     _CKCON0,#0x02
00B3            737   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:148: TMOD &= 0b_1111_0000;      // Set the bits of Timer/Counter 0 to zero
00B3 5389F0     738            anl     _TMOD,#0xF0
00B6            739   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:149: TMOD |= 0b_0000_0010;      // Timer/Counter 0 used as a 8-bit auto-reload timer
00B6 438902     740            orl     _TMOD,#0x02
00B9            741   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:151: TL0 = RELOAD_TIMER0; // initial value
00B9 758AD2     742            mov     _TL0,#0xD2
00BC            743   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:152: TH0 = RELOAD_TIMER0; // reload value
00BC 758CD2     744            mov     _TH0,#0xD2
00BF            745   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:154: ET0 = 1; // enable timer 0 interrupt
00BF D2A9       746            setb    _ET0
00C1            747   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:155: EA = 1;     // enable global interrupts
00C1 D2AF       748            setb    _EA
00C3            749   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:157: TR0 = 0; // Stop Timer/Counter 0
00C3 C28C       750            clr     _TR0
00C5 22         751            ret
00C6            752   ;------------------------------------------------------------
00C6            753   ;Allocation info for local variables in function 'TIMER2_Init'
00C6            754   ;------------------------------------------------------------
00C6            755   ;------------------------------------------------------------
00C6            756   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:160: void TIMER2_Init(void)
00C6            757   ;        -----------------------------------------
00C6            758   ;         function TIMER2_Init
00C6            759   ;        -----------------------------------------
00C6            760   _TIMER2_Init:
00C6            761   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:163: TMR2CN0 = 0x00;                    // Stop Timer2; Clear TF2;
00C6 75C800     762            mov     _TMR2CN0,#0x00
00C9            763   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:164: CKCON0 |= 0b_0001_0000; // Timer 2 uses the system clock
00C9 438E10     764            orl     _CKCON0,#0x10
00CC            765   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:167: TMR2RL = 29536;
00CC 75CA60     766            mov     _TMR2RL,#0x60
00CF 75CB73     767            mov     (_TMR2RL >> 8),#0x73
00D2            768   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:168: TMR2 = 0xffff; // Set to reload immediately
00D2 75CEFF     769            mov     _TMR2,#0xFF
00D5 75CFFF     770            mov     (_TMR2 >> 8),#0xFF
00D8            771   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:169: EA = 1;               // enable global interrupts
00D8 D2AF       772            setb    _EA
00DA            773   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:170: ET2 = 1;      // Enable Timer2 interrupts
00DA D2AD       774            setb    _ET2
00DC            775   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:171: TR2 = 0;      // Start Timer2 (TMR2CN is bit addressable)
00DC C2CA       776            clr     _TR2
00DE 22         777            ret
00DF            778   ;------------------------------------------------------------
00DF            779   ;Allocation info for local variables in function 'Timer0_ISR'
00DF            780   ;------------------------------------------------------------
00DF            781   ;------------------------------------------------------------
00DF            782   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:174: void Timer0_ISR(void) interrupt INTERRUPT_TIMER0
00DF            783   ;        -----------------------------------------
00DF            784   ;         function Timer0_ISR
00DF            785   ;        -----------------------------------------
00DF            786   _Timer0_ISR:
00DF            787   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:177: SFRPAGE = 0x0;
00DF 75A700     788            mov     _SFRPAGE,#0x00
00E2            789   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:181: TIMER_OUT_0 = !TIMER_OUT_0;
00E2 B2A0       790            cpl     _P2_0
00E4            791   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:182: TIMER_OUT_0_INVERTED = !TIMER_OUT_0_INVERTED;
00E4 B2A1       792            cpl     _P2_1
00E6 32         793            reti
00E7            794   ;        eliminated unneeded push/pop psw
00E7            795   ;        eliminated unneeded push/pop dpl
00E7            796   ;        eliminated unneeded push/pop dph
00E7            797   ;        eliminated unneeded push/pop b
00E7            798   ;        eliminated unneeded push/pop acc
00E7            799   ;------------------------------------------------------------
00E7            800   ;Allocation info for local variables in function 'Timer2_ISR'
00E7            801   ;------------------------------------------------------------
00E7            802   ;------------------------------------------------------------
00E7            803   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:185: void Timer2_ISR(void) interrupt INTERRUPT_TIMER2
00E7            804   ;        -----------------------------------------
00E7            805   ;         function Timer2_ISR
00E7            806   ;        -----------------------------------------
00E7            807   _Timer2_ISR:
00E7 C0E0       808            push    acc
00E9 C0D0       809            push    psw
00EB 75D000     810            mov     psw,#0x00
00EE            811   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:187: SFRPAGE = 0x0;
00EE 75A700     812            mov     _SFRPAGE,#0x00
00F1            813   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:188: TF2H = 0; // Clear Timer2 interrupt flag
00F1 C2CF       814            clr     _TF2H
00F3            815   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:191: pwm_count++;
00F3 0500       816            inc     _pwm_count
00F5 E4         817            clr     a
00F6 B50038     818            cjne    a,_pwm_count,L008009?
00F9 0501       819            inc     (_pwm_count + 1)
00FB            820   L008009?:
00FB            821   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:192: if (pwm_count == 200)
00FB 74C8       822            mov     a,#0xC8
00FD B50078     823            cjne    a,_pwm_count,L008010?
0100 E4         824            clr     a
0101 B50178     825            cjne    a,(_pwm_count + 1),L008010?
0104 8000       826            sjmp    L008011?
0106            827   L008010?:
0106 8000       828            sjmp    L008002?
0108            829   L008011?:
0108            830   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:194: pwm_count = 0;
0108 E4         831            clr     a
0109 F500       832            mov     _pwm_count,a
010B F501       833            mov     (_pwm_count + 1),a
010D            834   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:195: TIMER_OUT_2 = 1;
010D D296       835            setb    _P1_6
010F            836   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:196: TIMER_OUT_0 = 0;
010F C2A0       837            clr     _P2_0
0111            838   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:197: TIMER_OUT_0_INVERTED = 1;
0111 D2A1       839            setb    _P2_1
0113            840   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:198: TR0 = 1;
0113 D28C       841            setb    _TR0
0115            842   L008002?:
0115            843   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:202: if (pwm_count == 100)
0115 7464       844            mov     a,#0x64
0117 B50038     845            cjne    a,_pwm_count,L008012?
011A E4         846            clr     a
011B B50138     847            cjne    a,(_pwm_count + 1),L008012?
011E 8000       848            sjmp    L008013?
0120            849   L008012?:
0120 8000       850            sjmp    L008005?
0122            851   L008013?:
0122            852   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:204: TIMER_OUT_2 = 0;
0122 C296       853            clr     _P1_6
0124            854   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:205: TR0 = 0;
0124 C28C       855            clr     _TR0
0126            856   L008005?:
0126 D0D0       857            pop     psw
0128 D0E0       858            pop     acc
012A 32         859            reti
012B            860   ;        eliminated unneeded push/pop dpl
012B            861   ;        eliminated unneeded push/pop dph
012B            862   ;        eliminated unneeded push/pop b
012B            863   ;------------------------------------------------------------
012B            864   ;Allocation info for local variables in function 'LCD_pulse'
012B            865   ;------------------------------------------------------------
012B            866   ;------------------------------------------------------------
012B            867   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:211: void LCD_pulse(void)
012B            868   ;        -----------------------------------------
012B            869   ;         function LCD_pulse
012B            870   ;        -----------------------------------------
012B            871   _LCD_pulse:
012B            872   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:213: LCD_E = 1;
012B D2A5       873            setb    _P2_5
012D            874   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:214: Timer3us(40);
012D 758228     875            mov     dpl,#0x28
0130 120000     876            lcall   _Timer3us
0133            877   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:215: LCD_E = 0;
0133 C2A5       878            clr     _P2_5
0135 22         879            ret
0136            880   ;------------------------------------------------------------
0136            881   ;Allocation info for local variables in function 'LCD_byte'
0136            882   ;------------------------------------------------------------
0136            883   ;x                         Allocated to registers r2 
0136            884   ;------------------------------------------------------------
0136            885   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:218: void LCD_byte(unsigned char x)
0136            886   ;        -----------------------------------------
0136            887   ;         function LCD_byte
0136            888   ;        -----------------------------------------
0136            889   _LCD_byte:
0136 AA82       890            mov     r2,dpl
0138            891   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:221: ACC = x; // Send high nible
0138 8AE0       892            mov     _ACC,r2
013A            893   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:222: LCD_D7 = ACC_7;
013A A2E7       894            mov     c,_ACC_7
013C 92A1       895            mov     _P2_1,c
013E            896   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:223: LCD_D6 = ACC_6;
013E A2E6       897            mov     c,_ACC_6
0140 92A2       898            mov     _P2_2,c
0142            899   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:224: LCD_D5 = ACC_5;
0142 A2E5       900            mov     c,_ACC_5
0144 92A3       901            mov     _P2_3,c
0146            902   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:225: LCD_D4 = ACC_4;
0146 A2E4       903            mov     c,_ACC_4
0148 92A4       904            mov     _P2_4,c
014A            905   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:226: LCD_pulse();
014A C002       906            push    ar2
014C 120000     907            lcall   _LCD_pulse
014F            908   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:227: Timer3us(40);
014F 758228     909            mov     dpl,#0x28
0152 120000     910            lcall   _Timer3us
0155 D002       911            pop     ar2
0157            912   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:228: ACC = x; // Send low nible
0157 8AE0       913            mov     _ACC,r2
0159            914   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:229: LCD_D7 = ACC_3;
0159 A2E3       915            mov     c,_ACC_3
015B 92A1       916            mov     _P2_1,c
015D            917   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:230: LCD_D6 = ACC_2;
015D A2E2       918            mov     c,_ACC_2
015F 92A2       919            mov     _P2_2,c
0161            920   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:231: LCD_D5 = ACC_1;
0161 A2E1       921            mov     c,_ACC_1
0163 92A3       922            mov     _P2_3,c
0165            923   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:232: LCD_D4 = ACC_0;
0165 A2E0       924            mov     c,_ACC_0
0167 92A4       925            mov     _P2_4,c
0169            926   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:233: LCD_pulse();
0169 020000     927            ljmp    _LCD_pulse
016C            928   ;------------------------------------------------------------
016C            929   ;Allocation info for local variables in function 'WriteData'
016C            930   ;------------------------------------------------------------
016C            931   ;x                         Allocated to registers r2 
016C            932   ;------------------------------------------------------------
016C            933   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:236: void WriteData(unsigned char x)
016C            934   ;        -----------------------------------------
016C            935   ;         function WriteData
016C            936   ;        -----------------------------------------
016C            937   _WriteData:
016C AA82       938            mov     r2,dpl
016E            939   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:238: LCD_RS = 1;
016E D2A6       940            setb    _P2_6
0170            941   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:239: LCD_byte(x);
0170 8A82       942            mov     dpl,r2
0172 120000     943            lcall   _LCD_byte
0175            944   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:240: waitms(2);
0175 900002     945            mov     dptr,#0x0002
0178 020000     946            ljmp    _waitms
017B            947   ;------------------------------------------------------------
017B            948   ;Allocation info for local variables in function 'WriteCommand'
017B            949   ;------------------------------------------------------------
017B            950   ;x                         Allocated to registers r2 
017B            951   ;------------------------------------------------------------
017B            952   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:243: void WriteCommand(unsigned char x)
017B            953   ;        -----------------------------------------
017B            954   ;         function WriteCommand
017B            955   ;        -----------------------------------------
017B            956   _WriteCommand:
017B AA82       957            mov     r2,dpl
017D            958   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:245: LCD_RS = 0;
017D C2A6       959            clr     _P2_6
017F            960   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:246: LCD_byte(x);
017F 8A82       961            mov     dpl,r2
0181 120000     962            lcall   _LCD_byte
0184            963   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:247: waitms(5);
0184 900005     964            mov     dptr,#0x0005
0187 020000     965            ljmp    _waitms
018A            966   ;------------------------------------------------------------
018A            967   ;Allocation info for local variables in function 'LCD_4BIT'
018A            968   ;------------------------------------------------------------
018A            969   ;------------------------------------------------------------
018A            970   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:250: void LCD_4BIT(void)
018A            971   ;        -----------------------------------------
018A            972   ;         function LCD_4BIT
018A            973   ;        -----------------------------------------
018A            974   _LCD_4BIT:
018A            975   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:252: LCD_E = 0; // Resting state of LCD's enable is zero
018A C2A5       976            clr     _P2_5
018C            977   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:254: waitms(20);
018C 900014     978            mov     dptr,#0x0014
018F 120000     979            lcall   _waitms
0192            980   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:256: WriteCommand(0x33);
0192 758233     981            mov     dpl,#0x33
0195 120000     982            lcall   _WriteCommand
0198            983   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:257: WriteCommand(0x33);
0198 758233     984            mov     dpl,#0x33
019B 120000     985            lcall   _WriteCommand
019E            986   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:258: WriteCommand(0x32); // Change to 4-bit mode
019E 758232     987            mov     dpl,#0x32
01A1 120000     988            lcall   _WriteCommand
01A4            989   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:261: WriteCommand(0x28);
01A4 758228     990            mov     dpl,#0x28
01A7 120000     991            lcall   _WriteCommand
01AA            992   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:262: WriteCommand(0x0c);
01AA 75820C     993            mov     dpl,#0x0C
01AD 120000     994            lcall   _WriteCommand
01B0            995   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:263: WriteCommand(0x01); // Clear screen command (takes some time)
01B0 758201     996            mov     dpl,#0x01
01B3 120000     997            lcall   _WriteCommand
01B6            998   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:264: waitms(20);                        // Wait for clear screen command to finsih.
01B6 900014     999            mov     dptr,#0x0014
01B9 020000    1000            ljmp    _waitms
01BC           1001   ;------------------------------------------------------------
01BC           1002   ;Allocation info for local variables in function 'LCDprint'
01BC           1003   ;------------------------------------------------------------
01BC           1004   ;line                      Allocated with name '_LCDprint_PARM_2'
01BC           1005   ;string                    Allocated to registers r2 r3 r4 
01BC           1006   ;j                         Allocated to registers r5 r6 
01BC           1007   ;------------------------------------------------------------
01BC           1008   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:267: void LCDprint(char *string, unsigned char line, bit clear)
01BC           1009   ;        -----------------------------------------
01BC           1010   ;         function LCDprint
01BC           1011   ;        -----------------------------------------
01BC           1012   _LCDprint:
01BC AA82      1013            mov     r2,dpl
01BE AB83      1014            mov     r3,dph
01C0 ACF0      1015            mov     r4,b
01C2           1016   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:271: WriteCommand(line == 2 ? 0xc0 : 0x80);
01C2 7402      1017            mov     a,#0x02
01C4 B5C038    1018            cjne    a,_LCDprint_PARM_2,L014013?
01C7 7DC0      1019            mov     r5,#0xC0
01C9 8000      1020            sjmp    L014014?
01CB           1021   L014013?:
01CB 7D80      1022            mov     r5,#0x80
01CD           1023   L014014?:
01CD 8D82      1024            mov     dpl,r5
01CF C002      1025            push    ar2
01D1 C003      1026            push    ar3
01D3 C004      1027            push    ar4
01D5 120000    1028            lcall   _WriteCommand
01D8           1029   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:272: waitms(5);
01D8 900005    1030            mov     dptr,#0x0005
01DB 120000    1031            lcall   _waitms
01DE D004      1032            pop     ar4
01E0 D003      1033            pop     ar3
01E2 D002      1034            pop     ar2
01E4           1035   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:273: for (j = 0; string[j] != 0; j++)
01E4 7D00      1036            mov     r5,#0x00
01E6 7E00      1037            mov     r6,#0x00
01E8           1038   L014003?:
01E8 ED        1039            mov     a,r5
01E9 2A        1040            add     a,r2
01EA FF        1041            mov     r7,a
01EB EE        1042            mov     a,r6
01EC 3B        1043            addc    a,r3
01ED F8        1044            mov     r0,a
01EE 8C01      1045            mov     ar1,r4
01F0 8F82      1046            mov     dpl,r7
01F2 8883      1047            mov     dph,r0
01F4 89F0      1048            mov     b,r1
01F6 120000    1049            lcall   __gptrget
01F9 FF        1050            mov     r7,a
01FA 6000      1051            jz      L014006?
01FC           1052   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:274: WriteData(string[j]); // Write the message
01FC 8F82      1053            mov     dpl,r7
01FE C002      1054            push    ar2
0200 C003      1055            push    ar3
0202 C004      1056            push    ar4
0204 C005      1057            push    ar5
0206 C006      1058            push    ar6
0208 120000    1059            lcall   _WriteData
020B D006      1060            pop     ar6
020D D005      1061            pop     ar5
020F D004      1062            pop     ar4
0211 D003      1063            pop     ar3
0213 D002      1064            pop     ar2
0215           1065   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:273: for (j = 0; string[j] != 0; j++)
0215 0D        1066            inc     r5
0216 BD00B8    1067            cjne    r5,#0x00,L014003?
0219 0E        1068            inc     r6
021A 8000      1069            sjmp    L014003?
021C           1070   L014006?:
021C           1071   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:275: if (clear)
021C 303078    1072            jnb     _LCDprint_PARM_3,L014011?
021F 8D02      1073            mov     ar2,r5
0221 8E03      1074            mov     ar3,r6
0223           1075   L014007?:
0223           1076   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:276: for (; j < CHARS_PER_LINE; j++)
0223 C3        1077            clr     c
0224 EA        1078            mov     a,r2
0225 9410      1079            subb    a,#0x10
0227 EB        1080            mov     a,r3
0228 6480      1081            xrl     a,#0x80
022A 9480      1082            subb    a,#0x80
022C 5000      1083            jnc     L014011?
022E           1084   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:277: WriteData(' '); // Clear the rest of the line
022E 758220    1085            mov     dpl,#0x20
0231 C002      1086            push    ar2
0233 C003      1087            push    ar3
0235 120000    1088            lcall   _WriteData
0238 D003      1089            pop     ar3
023A D002      1090            pop     ar2
023C           1091   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:276: for (; j < CHARS_PER_LINE; j++)
023C 0A        1092            inc     r2
023D BA00B8    1093            cjne    r2,#0x00,L014007?
0240 0B        1094            inc     r3
0241 8000      1095            sjmp    L014007?
0243           1096   L014011?:
0243 22        1097            ret
0244           1098   ;------------------------------------------------------------
0244           1099   ;Allocation info for local variables in function 'getsn'
0244           1100   ;------------------------------------------------------------
0244           1101   ;len                       Allocated with name '_getsn_PARM_2'
0244           1102   ;buff                      Allocated with name '_getsn_buff_1_72'
0244           1103   ;j                         Allocated with name '_getsn_sloc0_1_0'
0244           1104   ;c                         Allocated to registers r3 
0244           1105   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
0244           1106   ;------------------------------------------------------------
0244           1107   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:280: int getsn(char *buff, int len)
0244           1108   ;        -----------------------------------------
0244           1109   ;         function getsn
0244           1110   ;        -----------------------------------------
0244           1111   _getsn:
0244 858268    1112            mov     _getsn_buff_1_72,dpl
0247 858369    1113            mov     (_getsn_buff_1_72 + 1),dph
024A 85F06A    1114            mov     (_getsn_buff_1_72 + 2),b
024D           1115   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:285: for (j = 0; j < (len - 1); j++)
024D E4        1116            clr     a
024E F5B8      1117            mov     _getsn_sloc0_1_0,a
0250 F5B9      1118            mov     (_getsn_sloc0_1_0 + 1),a
0252 E570      1119            mov     a,_getsn_PARM_2
0254 24FF      1120            add     a,#0xff
0256 FF        1121            mov     r7,a
0257 E571      1122            mov     a,(_getsn_PARM_2 + 1)
0259 34FF      1123            addc    a,#0xff
025B F8        1124            mov     r0,a
025C 7900      1125            mov     r1,#0x00
025E 7A00      1126            mov     r2,#0x00
0260           1127   L015005?:
0260 C3        1128            clr     c
0261 E9        1129            mov     a,r1
0262 9F        1130            subb    a,r7
0263 EA        1131            mov     a,r2
0264 6480      1132            xrl     a,#0x80
0266 88F0      1133            mov     b,r0
0268 63F080    1134            xrl     b,#0x80
026B 95F0      1135            subb    a,b
026D 5000      1136            jnc     L015008?
026F           1137   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:287: c = getchar();
026F C002      1138            push    ar2
0271 C007      1139            push    ar7
0273 C000      1140            push    ar0
0275 C001      1141            push    ar1
0277 120000    1142            lcall   _getchar
027A AB82      1143            mov     r3,dpl
027C D001      1144            pop     ar1
027E D000      1145            pop     ar0
0280 D007      1146            pop     ar7
0282 D002      1147            pop     ar2
0284           1148   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:288: if ((c == '\n') || (c == '\r'))
0284 BB0AB8    1149            cjne    r3,#0x0A,L015015?
0287 8000      1150            sjmp    L015001?
0289           1151   L015015?:
0289 BB0D38    1152            cjne    r3,#0x0D,L015002?
028C           1153   L015001?:
028C           1154   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:290: buff[j] = 0;
028C E5B8      1155            mov     a,_getsn_sloc0_1_0
028E 2568      1156            add     a,_getsn_buff_1_72
0290 FC        1157            mov     r4,a
0291 E5B9      1158            mov     a,(_getsn_sloc0_1_0 + 1)
0293 3569      1159            addc    a,(_getsn_buff_1_72 + 1)
0295 FD        1160            mov     r5,a
0296 AE6A      1161            mov     r6,(_getsn_buff_1_72 + 2)
0298 8C82      1162            mov     dpl,r4
029A 8D83      1163            mov     dph,r5
029C 8EF0      1164            mov     b,r6
029E E4        1165            clr     a
029F 120000    1166            lcall   __gptrput
02A2           1167   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:291: return j;
02A2 85B882    1168            mov     dpl,_getsn_sloc0_1_0
02A5 85B983    1169            mov     dph,(_getsn_sloc0_1_0 + 1)
02A8 22        1170            ret
02A9           1171   L015002?:
02A9           1172   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:295: buff[j] = c;
02A9 E9        1173            mov     a,r1
02AA 2568      1174            add     a,_getsn_buff_1_72
02AC FC        1175            mov     r4,a
02AD EA        1176            mov     a,r2
02AE 3569      1177            addc    a,(_getsn_buff_1_72 + 1)
02B0 FD        1178            mov     r5,a
02B1 AE6A      1179            mov     r6,(_getsn_buff_1_72 + 2)
02B3 8C82      1180            mov     dpl,r4
02B5 8D83      1181            mov     dph,r5
02B7 8EF0      1182            mov     b,r6
02B9 EB        1183            mov     a,r3
02BA 120000    1184            lcall   __gptrput
02BD           1185   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:285: for (j = 0; j < (len - 1); j++)
02BD 09        1186            inc     r1
02BE B900B8    1187            cjne    r1,#0x00,L015018?
02C1 0A        1188            inc     r2
02C2           1189   L015018?:
02C2 89B8      1190            mov     _getsn_sloc0_1_0,r1
02C4 8AB9      1191            mov     (_getsn_sloc0_1_0 + 1),r2
02C6 8000      1192            sjmp    L015005?
02C8           1193   L015008?:
02C8           1194   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:298: buff[j] = 0;
02C8 E5B8      1195            mov     a,_getsn_sloc0_1_0
02CA 2568      1196            add     a,_getsn_buff_1_72
02CC FA        1197            mov     r2,a
02CD E5B9      1198            mov     a,(_getsn_sloc0_1_0 + 1)
02CF 3569      1199            addc    a,(_getsn_buff_1_72 + 1)
02D1 FB        1200            mov     r3,a
02D2 AC6A      1201            mov     r4,(_getsn_buff_1_72 + 2)
02D4 8A82      1202            mov     dpl,r2
02D6 8B83      1203            mov     dph,r3
02D8 8CF0      1204            mov     b,r4
02DA E4        1205            clr     a
02DB 120000    1206            lcall   __gptrput
02DE           1207   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:299: return len;
02DE 857082    1208            mov     dpl,_getsn_PARM_2
02E1 857183    1209            mov     dph,(_getsn_PARM_2 + 1)
02E4 22        1210            ret
02E5           1211   ;------------------------------------------------------------
02E5           1212   ;Allocation info for local variables in function 'main'
02E5           1213   ;------------------------------------------------------------
02E5           1214   ;------------------------------------------------------------
02E5           1215   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:302: void main(void)
02E5           1216   ;        -----------------------------------------
02E5           1217   ;         function main
02E5           1218   ;        -----------------------------------------
02E5           1219   _main:
02E5           1220   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:304: TIMER_OUT_0 = 0;
02E5 C2A0      1221            clr     _P2_0
02E7           1222   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:305: TIMER_OUT_0_INVERTED = 1;
02E7 D2A1      1223            setb    _P2_1
02E9           1224   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:307: waitms(500); // Give PuTTY a chance to start.
02E9 9001F4    1225            mov     dptr,#0x01F4
02EC 120000    1226            lcall   _waitms
02EF           1227   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:308: pulse_width = 200;
02EF 7540C8    1228            mov     _pulse_width,#0xC8
02F2 E4        1229            clr     a
02F3 F541      1230            mov     (_pulse_width + 1),a
02F5           1231   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:309: TIMER0_Init();
02F5 120000    1232            lcall   _TIMER0_Init
02F8           1233   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:310: TIMER2_Init();
02F8 120000    1234            lcall   _TIMER2_Init
02FB           1235   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:312: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
02FB 74F8      1236            mov     a,#__str_0
02FD C0E0      1237            push    acc
02FF 74BD      1238            mov     a,#(__str_0 >> 8)
0301 C0E0      1239            push    acc
0303 7480      1240            mov     a,#0x80
0305 C0E0      1241            push    acc
0307 120000    1242            lcall   _printf
030A 1581      1243            dec     sp
030C 1581      1244            dec     sp
030E 1581      1245            dec     sp
0310           1246   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:317: __FILE__, __DATE__, __TIME__);
0310           1247   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:316: "Compiled: %s, %s\n\n",
0310 74B8      1248            mov     a,#__str_4
0312 C0E0      1249            push    acc
0314 74BE      1250            mov     a,#(__str_4 >> 8)
0316 C0E0      1251            push    acc
0318 7480      1252            mov     a,#0x80
031A C0E0      1253            push    acc
031C 74F8      1254            mov     a,#__str_3
031E C0E0      1255            push    acc
0320 74BE      1256            mov     a,#(__str_3 >> 8)
0322 C0E0      1257            push    acc
0324 7480      1258            mov     a,#0x80
0326 C0E0      1259            push    acc
0328 7438      1260            mov     a,#__str_2
032A C0E0      1261            push    acc
032C 74BF      1262            mov     a,#(__str_2 >> 8)
032E C0E0      1263            push    acc
0330 7480      1264            mov     a,#0x80
0332 C0E0      1265            push    acc
0334 7478      1266            mov     a,#__str_1
0336 C0E0      1267            push    acc
0338 74BF      1268            mov     a,#(__str_1 >> 8)
033A C0E0      1269            push    acc
033C 7480      1270            mov     a,#0x80
033E C0E0      1271            push    acc
0340 120000    1272            lcall   _printf
0343 E581      1273            mov     a,sp
0345 24F4      1274            add     a,#0xf4
0347 F581      1275            mov     sp,a
0349           1276   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:320: LCD_4BIT();
0349 120000    1277            lcall   _LCD_4BIT
034C           1278   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:321: TR2 = 1; // Start Timer2
034C D2CA      1279            setb    _TR2
034E           1280   ;        C:\Users\peter\Documents\ELEC291\Project2\Project-2-Tracking-Robot\doc\remote.c:323: while (1)
034E           1281   L016002?:
034E 8000      1282            sjmp    L016002?
0350           1283            rseg R_CSEG
0350           1284   
0000           1285            rseg R_XINIT
0000           1286   
0000           1287            rseg R_CONST
0000           1288   __str_0:
0000 1B        1289            db 0x1B
0001 5B324A    1290            db '[2J'
0004 00        1291            db 0x00
0005           1292   __str_1:
0005 45464D38  1293            db 'EFM8 remote'
     2072656D
     6F7465
0010 0A        1294            db 0x0A
0011 46696C65  1295            db 'File: %s'
     3A202573
0019 0A        1296            db 0x0A
001A 436F6D70  1297            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002A 0A        1298            db 0x0A
002B 0A        1299            db 0x0A
002C 00        1300            db 0x00
002D           1301   __str_2:
002D 433A      1302            db 'C:'
002F 5C        1303            db 0x5C
0030 55736572  1304            db 'Users'
     73
0035 5C        1305            db 0x5C
0036 70657465  1306            db 'peter'
     72
003B 5C        1307            db 0x5C
003C 446F6375  1308            db 'Documents'
     6D656E74
     73
0045 5C        1309            db 0x5C
0046 454C4543  1310            db 'ELEC291'
     323931
004D 5C        1311            db 0x5C
004E 50726F6A  1312            db 'Project2'
     65637432
0056 5C        1313            db 0x5C
0057 50726F6A  1314            db 'Project-2-Tracking'
     6563742D
     322D5472
     61636B69
     6E67
0069 2D526F62  1315            db '-Robot'
     6F74
006F 5C        1316            db 0x5C
0070 646F63    1317            db 'doc'
0073 5C        1318            db 0x5C
0074 72656D6F  1319            db 'remote.c'
     74652E63
007C 00        1320            db 0x00
007D           1321   __str_3:
007D 4D617220  1322            db 'Mar 23 2023'
     32332032
     303233
0088 00        1323            db 0x00
0089           1324   __str_4:
0089 31333A34  1325            db '13:41:10'
     313A3130
0091 00        1326            db 0x00
0092           1327   
002E           1328            CSEG
002E           1329   
002E           1330   end
